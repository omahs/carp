"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3833],{3905:function(e,r,t){t.d(r,{Zo:function(){return o},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=n.createContext({}),c=function(e){var r=n.useContext(u),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},o=function(e){var r=c(e.components);return n.createElement(u.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},d=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||i;return t?n.createElement(f,s(s({ref:r},o),{},{components:t})):n.createElement(f,s({ref:r},o))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=d;var l={};for(var u in r)hasOwnProperty.call(r,u)&&(l[u]=r[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7193:function(e,r,t){t.r(r),t.d(r,{assets:function(){return o},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var n=t(7462),a=t(3366),i=(t(7294),t(3905)),s=["components"],l={},u="MultieraMinSwapV1MeanPriceTask",c={unversionedId:"indexer/Tasks/MultieraMinSwapV1MeanPriceTask",id:"indexer/Tasks/MultieraMinSwapV1MeanPriceTask",title:"MultieraMinSwapV1MeanPriceTask",description:"Adds Minswap V1 mean price updates to the database",source:"@site/docs/indexer/Tasks/MultieraMinSwapV1MeanPriceTask.md",sourceDirName:"indexer/Tasks",slug:"/indexer/Tasks/MultieraMinSwapV1MeanPriceTask",permalink:"/carp/docs/indexer/Tasks/MultieraMinSwapV1MeanPriceTask",draft:!1,editUrl:"https://github.com/dcSpark/carp/docs/indexer/Tasks/MultieraMinSwapV1MeanPriceTask.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MultieraMetadataTask",permalink:"/carp/docs/indexer/Tasks/MultieraMetadataTask"},next:{title:"MultieraMinSwapV1SwapTask",permalink:"/carp/docs/indexer/Tasks/MultieraMinSwapV1SwapTask"}},o={},p=[{value:"Era",id:"era",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Data accessed",id:"data-accessed",level:2},{value:"Reads from",id:"reads-from",level:4},{value:"Full source",id:"full-source",level:2}],d={toc:p};function m(e){var r=e.components,t=(0,a.Z)(e,s);return(0,i.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multieraminswapv1meanpricetask"},"MultieraMinSwapV1MeanPriceTask"),(0,i.kt)("p",null,"Adds Minswap V1 mean price updates to the database"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Clone, Copy, serde::Deserialize, serde::Serialize)]\npub struct EmptyConfig {}\n\n"))),(0,i.kt)("h2",{id:"era"},"Era"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"multiera")),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./MultieraAddressTask"},"MultieraAddressTask"))),(0,i.kt)("h2",{id:"data-accessed"},"Data accessed"),(0,i.kt)("h4",{id:"reads-from"},"Reads from"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"multiera_txs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"multiera_addresses"))),(0,i.kt)("h2",{id:"full-source"},"Full source"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/dcSpark/carp/tree/main/indexer/tasks/src/multiera/multiera_minswap_v1_mean_price.rs"},"source")))}m.isMDXComponent=!0}}]);