"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[303],{3905:function(e,r,t){t.d(r,{Zo:function(){return o},kt:function(){return m}});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function u(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),c=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):u(u({},r),e)),t},o=function(e){var r=c(e.components);return a.createElement(s.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,o=l(e,["components","mdxType","originalType","parentName"]),d=c(t),m=n,f=d["".concat(s,".").concat(m)]||d[m]||p[m]||i;return t?a.createElement(f,u(u({ref:r},o),{},{components:t})):a.createElement(f,u({ref:r},o))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var i=t.length,u=new Array(i);u[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,u[1]=l;for(var c=2;c<i;c++)u[c]=t[c];return a.createElement.apply(null,u)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8544:function(e,r,t){t.r(r),t.d(r,{assets:function(){return o},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var a=t(7462),n=t(3366),i=(t(7294),t(3905)),u=["components"],l={},s="MultieraSundaeSwapV1MeanPriceTask",c={unversionedId:"indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask",id:"indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask",title:"MultieraSundaeSwapV1MeanPriceTask",description:"Adds SundaeSwap V1 mean price updates to the database",source:"@site/docs/indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask.md",sourceDirName:"indexer/Tasks",slug:"/indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask",permalink:"/carp/docs/indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask",draft:!1,editUrl:"https://github.com/dcSpark/carp/docs/indexer/Tasks/MultieraSundaeSwapV1MeanPriceTask.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"MultieraStakeCredentialTask",permalink:"/carp/docs/indexer/Tasks/MultieraStakeCredentialTask"},next:{title:"MultieraSundaeSwapV1SwapTask",permalink:"/carp/docs/indexer/Tasks/MultieraSundaeSwapV1SwapTask"}},o={},p=[{value:"Era",id:"era",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Data accessed",id:"data-accessed",level:2},{value:"Reads from",id:"reads-from",level:4},{value:"Full source",id:"full-source",level:2}],d={toc:p};function m(e){var r=e.components,t=(0,n.Z)(e,u);return(0,i.kt)("wrapper",(0,a.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multierasundaeswapv1meanpricetask"},"MultieraSundaeSwapV1MeanPriceTask"),(0,i.kt)("p",null,"Adds SundaeSwap V1 mean price updates to the database"),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Configuration"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"#[derive(Debug, Clone, Copy, serde::Deserialize, serde::Serialize)]\npub struct EmptyConfig {}\n\n"))),(0,i.kt)("h2",{id:"era"},"Era"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"multiera")),(0,i.kt)("h2",{id:"dependencies"},"Dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"./MultieraAddressTask"},"MultieraAddressTask"))),(0,i.kt)("h2",{id:"data-accessed"},"Data accessed"),(0,i.kt)("h4",{id:"reads-from"},"Reads from"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"multiera_txs")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"multiera_addresses"))),(0,i.kt)("h2",{id:"full-source"},"Full source"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/dcSpark/carp/tree/main/indexer/tasks/src/multiera/multiera_sundaeswap_v1_mean_price.rs"},"source")))}m.isMDXComponent=!0}}]);